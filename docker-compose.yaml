version: '3.8'

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      - api
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: mrlerich/diplom
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
#    volumes:
#      - ./.env:/todolist/.env
  migrations:
    build: .
#      context: .
    image: mrlerich/diplom
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
#    volumes:
#      - .env:/todolist/.env
    command: >
      sh -c "python3 manage.py migrate"
  db:
    image: postgres:15.1-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
  frontend:
